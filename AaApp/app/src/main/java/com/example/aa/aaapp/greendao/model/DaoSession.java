package com.example.aa.aaapp.greendao.model;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.example.aa.aaapp.greendao.model.UserEntity;
import com.example.aa.aaapp.greendao.model.AccountBookEntity;
import com.example.aa.aaapp.greendao.model.CategoryEntity;
import com.example.aa.aaapp.greendao.model.PayoutEntity;

import com.example.aa.aaapp.greendao.model.UserEntityDao;
import com.example.aa.aaapp.greendao.model.AccountBookEntityDao;
import com.example.aa.aaapp.greendao.model.CategoryEntityDao;
import com.example.aa.aaapp.greendao.model.PayoutEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userEntityDaoConfig;
    private final DaoConfig accountBookEntityDaoConfig;
    private final DaoConfig categoryEntityDaoConfig;
    private final DaoConfig payoutEntityDaoConfig;

    private final UserEntityDao userEntityDao;
    private final AccountBookEntityDao accountBookEntityDao;
    private final CategoryEntityDao categoryEntityDao;
    private final PayoutEntityDao payoutEntityDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userEntityDaoConfig = daoConfigMap.get(UserEntityDao.class).clone();
        userEntityDaoConfig.initIdentityScope(type);

        accountBookEntityDaoConfig = daoConfigMap.get(AccountBookEntityDao.class).clone();
        accountBookEntityDaoConfig.initIdentityScope(type);

        categoryEntityDaoConfig = daoConfigMap.get(CategoryEntityDao.class).clone();
        categoryEntityDaoConfig.initIdentityScope(type);

        payoutEntityDaoConfig = daoConfigMap.get(PayoutEntityDao.class).clone();
        payoutEntityDaoConfig.initIdentityScope(type);

        userEntityDao = new UserEntityDao(userEntityDaoConfig, this);
        accountBookEntityDao = new AccountBookEntityDao(accountBookEntityDaoConfig, this);
        categoryEntityDao = new CategoryEntityDao(categoryEntityDaoConfig, this);
        payoutEntityDao = new PayoutEntityDao(payoutEntityDaoConfig, this);

        registerDao(UserEntity.class, userEntityDao);
        registerDao(AccountBookEntity.class, accountBookEntityDao);
        registerDao(CategoryEntity.class, categoryEntityDao);
        registerDao(PayoutEntity.class, payoutEntityDao);
    }
    
    public void clear() {
        userEntityDaoConfig.getIdentityScope().clear();
        accountBookEntityDaoConfig.getIdentityScope().clear();
        categoryEntityDaoConfig.getIdentityScope().clear();
        payoutEntityDaoConfig.getIdentityScope().clear();
    }

    public UserEntityDao getUserEntityDao() {
        return userEntityDao;
    }

    public AccountBookEntityDao getAccountBookEntityDao() {
        return accountBookEntityDao;
    }

    public CategoryEntityDao getCategoryEntityDao() {
        return categoryEntityDao;
    }

    public PayoutEntityDao getPayoutEntityDao() {
        return payoutEntityDao;
    }

}
